#!/usr/bin/env python

import libvirt, shelve, threading, getopt
import os, sys, random, re

workpath = '/root/cloudvirt/'
def shelveload():
    ret = {}
    try:
        db = shelve.open(workpath + '/db4vm.dat', 'r')
        ret.update(db)
    finally:
        db.close()
    return ret

def getallnodes():
    db = shelveload()
    pms = []
    for key in db.keys():
        pms.append(db[key]['pm'])
    return list(set(pms))

def terminatePMInstancs(pid):
    conn = libvirt.open("xen+ssh://root@%s/" % pid)
    if conn == None:
        print 'Failed to open connection to the hypervisor'
        return
    
    for id in conn.listDomainsID():
        if id > 0:
	    dom = conn.lookupByID(id)
	    name = dom.name()
	    dom.destroy()
	    print "%s has been terminated, please wait it to shutdown" % name

def terminateAllInstances(nodes):
    print "Terminate all VMs on " + str(nodes) + ". \nAre you sure ?",
    v = raw_input()
    if v != 'y' :
        sys.exit(1)

    thr = []
    for n in nodes:
        thr.append(threading.Thread(target=terminatePMInstancs, args=(n,)))

    for i in range(len(nodes)):
        thr[i].start()
    for i in range(len(nodes)):
        thr[i].join()

def usage():
    print "usage"

try:
    opts, args = getopt.getopt(sys.argv[1:], "i:", ["all"])
except:
    usage()
    sys.exit()

if ('--all','') in opts:
    nodes = getallnodes()
    terminateAllInstances(nodes)

