#!/usr/bin/env python

import libvirt, threading
import os, sys, random, re
import libshelve

def getdbmac():
    db = libshelve.load('dbmac')
    for key in db.keys():
        if db[key] == 0 :
            return key

def createinstance(pid):
    conn = libvirt.open("xen+ssh://root@%s/" % pid)
    if conn == None:
        print 'Failed to open connection to the hypervisor'
	return;

    names = os.popen("ssh %s ls %s" % (pid, workpath)).read()
    names = re.split(r"\n", names)
    names.remove('')
    print names;

    cpu = 24
    mem = 16 * 1024 * 1024

    for name in names:
	#if conn.lookupByName(name) != null :
	#    continue

	#rand0 = random.randint(0,255)
	#rand1 = random.randint(0,255)
	#rand2 = random.randint(0,255)

        #mac = 'd0:0d:4f:%d:%d:%d' % (rand0, rand1, rand2)
	#mac = 'd0:0d:4f:%02x:%02x:%02x' % (rand0, rand1, rand2)
        mac = getdbmac()
        libshelve.modify('dbmac', mac, name)

        xml = open("/root/cloudvirt/libvirt.xml").read()
        xml = xml % ('%s' % name, 'restart', mem, cpu, '/var/run/cloudvirt/vm/%s/root' % name, mac)
	
	tmpfname = "/tmp/tmplibvirt%s.xml" % name
	tmpfile = open(tmpfname, "w")
	tmpfile.write(xml)
	tmpfile.close()
	os.system("scp %s %s:%s/%s/libvirt.xml" % (tmpfname, pid, workpath, name))	

	try:
            dom = conn.createXML(xml, 0)
	    print "Domain %s Created" % name
	except:
            print "Domain %s have NOT been created!!!" % (name )


nodes = open("/root/cloudvirt/nodes-create").read()
nodes = re.split(r"\n", nodes)
nodes.remove('')

print "Create VMs on " + str(nodes) + ". \nAre you sure (y/n)?",
v = raw_input()
if v != 'y' :
    sys.exit(1)

workpath = "/var/run/cloudvirt/vm/"

#thr = []
#for n in nodes :
#    thr.append(threading.Thread(target=createinstance, args=(n, )))
#for i in range(len(thr)):
#    thr[i].start()

for n in nodes :
    createinstance(n)

